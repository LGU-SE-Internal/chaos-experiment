// Code generated by clickhouseanalyzer; DO NOT EDIT.
package serviceendpoints

// ServiceEndpoint represents a service endpoint from ClickHouse analysis
type ServiceEndpoint struct {
	ServiceName      string
	RequestMethod    string
	ResponseStatus   string
	Route            string
	ServerAddress    string
	ServerPort       string
}

// ServiceEndpoints maps service names to their endpoints
var ServiceEndpoints = map[string][]ServiceEndpoint{
	"ts-order-other-service": {
		{
			ServiceName:    "ts-order-other-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-travel-plan-service": {
		{
			ServiceName:    "ts-travel-plan-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/routeplanservice/routePlan/cheapestRoute",
			ServerAddress:  "ts-route-plan-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-travel-plan-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/routeplanservice/routePlan/quickestRoute",
			ServerAddress:  "ts-route-plan-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-travel-plan-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/trainservice/trains/byName/*",
			ServerAddress:  "ts-train-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-travel-plan-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/seatservice/seats/left_tickets",
			ServerAddress:  "ts-seat-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-travel-plan-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/routeplanservice/routePlan/minStopStations",
			ServerAddress:  "ts-route-plan-service",
			ServerPort:     "8080",
		},
	},
	"ts-travel-service": {
		{
			ServiceName:    "ts-travel-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
		{
			ServiceName:    "ts-travel-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/basicservice/basic/travel",
			ServerAddress:  "ts-basic-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-travel-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/basicservice/basic/travels",
			ServerAddress:  "ts-basic-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-travel-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/seatservice/seats/left_tickets",
			ServerAddress:  "ts-seat-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-travel-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/routeservice/routes/*",
			ServerAddress:  "ts-route-service",
			ServerPort:     "8080",
		},
	},
	"ts-route-service": {
		{
			ServiceName:    "ts-route-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
		{
			ServiceName:    "ts-route-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
		{
			ServiceName:    "ts-route-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-travel2-service": {
		{
			ServiceName:    "ts-travel2-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/basicservice/basic/travel",
			ServerAddress:  "ts-basic-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-travel2-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/seatservice/seats/left_tickets",
			ServerAddress:  "ts-seat-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-travel2-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/routeservice/routes/*",
			ServerAddress:  "ts-route-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-travel2-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/basicservice/basic/travels",
			ServerAddress:  "ts-basic-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-travel2-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-contacts-service": {
		{
			ServiceName:    "ts-contacts-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-train-service": {
		{
			ServiceName:    "ts-train-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-ui-dashboard": {
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travelplanservice/travelPlan/cheapest",
			ServerAddress:  "ts-travel-plan-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/consignservice/consigns/account/*",
			ServerAddress:  "ts-consign-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/orderOtherService/orderOther/refresh",
			ServerAddress:  "ts-order-other-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/orderservice/order/refresh",
			ServerAddress:  "ts-order-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travelplanservice/travelPlan/minStation",
			ServerAddress:  "ts-travel-plan-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travelservice/trips/left",
			ServerAddress:  "ts-travel-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/trainservice/trains",
			ServerAddress:  "ts-train-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travel2service/trips/left",
			ServerAddress:  "ts-travel2-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/assuranceservice/assurances/types",
			ServerAddress:  "ts-assurance-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/contactservice/contacts/account/*",
			ServerAddress:  "ts-contacts-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/foodservice/foods/*/*/*",
			ServerAddress:  "ts-food-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/preserveservice/preserve",
			ServerAddress:  "ts-preserve-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/routeservice/routes",
			ServerAddress:  "ts-route-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travelplanservice/travelPlan/quickest",
			ServerAddress:  "ts-travel-plan-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/users/login",
			ServerAddress:  "ts-auth-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/userservice/users/id/*",
			ServerAddress:  "ts-user-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-ui-dashboard",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/verifycode/verify/*",
			ServerAddress:  "ts-verification-code-service",
			ServerPort:     "8080",
		},
	},
	"ts-route-plan-service": {
		{
			ServiceName:    "ts-route-plan-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travelservice/trip_detail",
			ServerAddress:  "ts-travel-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-route-plan-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/travelservice/routes/*",
			ServerAddress:  "ts-travel-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-route-plan-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travel2service/trips/left",
			ServerAddress:  "ts-travel2-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-route-plan-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travelservice/trips/left",
			ServerAddress:  "ts-travel-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-route-plan-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/travel2service/routes/*",
			ServerAddress:  "ts-travel2-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-route-plan-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/routeservice/routes/*",
			ServerAddress:  "ts-route-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-route-plan-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travel2service/trip_detail",
			ServerAddress:  "ts-travel2-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-route-plan-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travelservice/trips/routes",
			ServerAddress:  "ts-travel-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-route-plan-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/routeservice/routes/*/*",
			ServerAddress:  "ts-route-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-route-plan-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travel2service/trips/routes",
			ServerAddress:  "ts-travel2-service",
			ServerPort:     "8080",
		},
	},
	"ts-preserve-service": {
		{
			ServiceName:    "ts-preserve-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/securityservice/securityConfigs/*",
			ServerAddress:  "ts-security-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-preserve-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/basicservice/basic/travel",
			ServerAddress:  "ts-basic-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-preserve-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/contactservice/contacts/*",
			ServerAddress:  "ts-contacts-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-preserve-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/orderservice/order",
			ServerAddress:  "ts-order-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-preserve-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/seatservice/seats",
			ServerAddress:  "ts-seat-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-preserve-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/travelservice/trip_detail",
			ServerAddress:  "ts-travel-service",
			ServerPort:     "8080",
		},
	},
	"ts-security-service": {
		{
			ServiceName:    "ts-security-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/orderOtherService/orderOther/security/*/*",
			ServerAddress:  "ts-order-other-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-security-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/orderservice/order/security/*/*",
			ServerAddress:  "ts-order-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-security-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-consign-service": {
		{
			ServiceName:    "ts-consign-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-station-food-service": {
		{
			ServiceName:    "ts-station-food-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
		{
			ServiceName:    "ts-station-food-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-seat-service": {
		{
			ServiceName:    "ts-seat-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/orderservice/order/*",
			ServerAddress:  "ts-order-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-seat-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/orderOtherService/orderOther/*",
			ServerAddress:  "ts-order-other-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-seat-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/configservice/configs/DirectTicketAllocationProportion",
			ServerAddress:  "ts-config-service",
			ServerPort:     "8080",
		},
	},
	"ts-config-service": {
		{
			ServiceName:    "ts-config-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-price-service": {
		{
			ServiceName:    "ts-price-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-user-service": {
		{
			ServiceName:    "ts-user-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-station-service": {
		{
			ServiceName:    "ts-station-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-food-service": {
		{
			ServiceName:    "ts-food-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/travelservice/routes/*",
			ServerAddress:  "ts-travel-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-food-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/stationfoodservice/stationfoodstores",
			ServerAddress:  "ts-station-food-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-food-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/trainfoodservice/trainfoods/*",
			ServerAddress:  "ts-train-food-service",
			ServerPort:     "8080",
		},
	},
	"ts-train-food-service": {
		{
			ServiceName:    "ts-train-food-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
		{
			ServiceName:    "ts-train-food-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-basic-service": {
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/priceservice/prices/*/GaoTieTwo",
			ServerAddress:  "ts-price-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/priceservice/prices/*/GaoTieOne",
			ServerAddress:  "ts-price-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/priceservice/prices/*/KuaiSu",
			ServerAddress:  "ts-price-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/trainservice/trains/byName/*",
			ServerAddress:  "ts-train-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/stationservice/stations/id/*",
			ServerAddress:  "ts-station-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/priceservice/prices/*/DongCheOne",
			ServerAddress:  "ts-price-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/priceservice/prices/*/TeKuai",
			ServerAddress:  "ts-price-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/priceservice/prices/*/ZhiDa",
			ServerAddress:  "ts-price-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/routeservice/routes/*",
			ServerAddress:  "ts-route-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/priceservice/prices/byRouteIdsAndTrainTypes",
			ServerAddress:  "ts-price-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/routeservice/routes/byIds/",
			ServerAddress:  "ts-route-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/stationservice/stations/idlist",
			ServerAddress:  "ts-station-service",
			ServerPort:     "8080",
		},
		{
			ServiceName:    "ts-basic-service",
			RequestMethod:  "POST",
			ResponseStatus: "200",
			Route:          "/api/v1/trainservice/trains/byNames",
			ServerAddress:  "ts-train-service",
			ServerPort:     "8080",
		},
	},
	"ts-order-service": {
		{
			ServiceName:    "ts-order-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
	},
	"ts-auth-service": {
		{
			ServiceName:    "ts-auth-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
		{
			ServiceName:    "ts-auth-service",
			RequestMethod:  "",
			ResponseStatus: "",
			Route:          "",
			ServerAddress:  "mysql",
			ServerPort:     "3306",
		},
		{
			ServiceName:    "ts-auth-service",
			RequestMethod:  "GET",
			ResponseStatus: "200",
			Route:          "/api/v1/verifycode/verify/*",
			ServerAddress:  "ts-verification-code-service",
			ServerPort:     "8080",
		},
	},
}

// GetEndpointsByService returns all endpoints for a service
func GetEndpointsByService(serviceName string) []ServiceEndpoint {
	if endpoints, exists := ServiceEndpoints[serviceName]; exists {
		return endpoints
	}
	return []ServiceEndpoint{}
}

// GetAllServices returns a list of all available service names
func GetAllServices() []string {
	services := make([]string, 0, len(ServiceEndpoints))
	for service := range ServiceEndpoints {
		services = append(services, service)
	}
	return services
}
